#!/bin/sh
#
# Copyright 2018 Bernhard Froehlich <decke@bluelife.at>
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# Get ZFS filesystem for mountpoint
#
core__rsynczfs__getfs(){
    local _host="$1" _mountpoint

    _mountpoint="${ssbt_dir}/${_host}"

    zfs list -Hp -t filesystem -o name "${_mountpoint}" \
        || util__err "ZFS Filesystem for ${_mountpoint} not found!"
}

# Transfer files from a remote location via rsync over ssh
#
core__rsynczfs__pull(){
    local _host="$1" _filesystem _snapshot
    local _remote_user _remote_dir _remote_url _local_url _rsync_flags

    config__get "_remote_user" "remote_user" "backup"
    config__get "_remote_dir" "remote_dir" "/data"
    config__get "_rsync_flags" "rsync_flags" "-av --delete"

    _filesystem=`core__rsynczfs__getfs "${_host}"`
    _snapshot=`date "+%Y%m%d%H%M.%S"`
    _remote_url="${_remote_user}@${_host}:${_remote_dir}/"
    _local_url="${ssbt_dir}/${_host}/"

    util__log "${_host}" "rsync from ${_remote_url} to ${_local_url}"

    rsync ${_rsync_flags} --exclude .ssbt.conf --exclude .ssbt.log \
        -e "ssh -q" "${_remote_url}" "${_local_url}" \
        || util__log "${_host}" "rsync failed to ${_host}" && return 1

    zfs snapshot "${_filesystem}@${_snapshot}" || return 1
}

# List local backups (youngest first)
#
core__rsynczfs__list(){
    local _host="$1" _filesystem _snapshot _timestamp

    _filesystem=`core__rsynczfs__getfs "${_host}"`

    zfs list -Hp -t snapshot -o name -r "${_filesystem}" | sort -r | \
    while read _snapshot; do
        _timestamp="${_snapshot##*@}"

        printf "%s^%s\n" "${_snapshot}" "${_timestamp}"
    done
}

# Remove backup
#
core__rsynczfs__remove(){
    local _host="$1" _backup="$2"

    zfs destroy "${_backup}" \
        || util__log "${_host}" "Removing ZFS snapshot ${_backup} failed"
}
